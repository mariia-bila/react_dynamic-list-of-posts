{"version":3,"sources":["api/api.ts","components/NewCommentForm/NewCommentForm.tsx","components/PostDetails/PostDetails.tsx","api/posts.ts","api/comments.ts","components/PostsList/PostsList.tsx","App.tsx","index.tsx"],"names":["BASE_URL","request","url","options","fetch","then","response","ok","Error","json","result","data","NewCommentForm","addComment","useState","name","setName","email","setEmail","body","setBody","className","onSubmit","event","preventDefault","submitComment","type","value","placeholder","onChange","target","required","PostDetails","selectedId","details","setDetails","comments","setComments","commentsIsvisible","setCommentsIsvisible","errorMessage","setErrorMessage","deleteComment","postId","method","filter","el","id","useEffect","Promise","reject","catch","comment","onClick","length","map","option","headers","JSON","stringify","PostsList","userId","posts","setPosts","selectedPostId","setSelectedPost","postDetails","setPostDetails","getUserPosts","userPosts","toggleDetails","post","title","classnames","App","selectedUser","setSelectedUser","htmlFor","Number","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8b3754dd.chunk.js","sourcesContent":["import { Comment } from '../components/types/Comment';\nimport { Option } from '../components/types/Option';\n\nexport const BASE_URL = 'https://mate.academy/students-api';\n\nexport const request = (url:string, options: Option) => {\n  return fetch(`${BASE_URL}${url}`, options)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Error');\n      }\n\n      return response.json();\n    })\n    .then(result => result.data);\n};\n\nexport const add = (url:string, data:Comment) => {\n  return request(url, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify(data),\n  });\n};\n\nexport const remove = (url:string) => {\n  return request(url, { method: 'DELETE' });\n};\n","import React, { SyntheticEvent, useState } from 'react';\nimport './NewCommentForm.scss';\n\ntype Props = {\n  addComment: (name:string, email:string, body:string) => void,\n};\n\nexport const NewCommentForm: React.FC<Props> = ({ addComment }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const submitComment = (event:SyntheticEvent) => {\n    event.preventDefault();\n    addComment(name, email, body);\n  };\n\n  const clearForm = () => {\n    setBody('');\n    setName('');\n    setEmail('');\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={(event) => {\n        submitComment(event);\n        clearForm();\n      }}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          onChange={(event) => setName(event.target.value)}\n          required\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          name=\"email\"\n          type=\"email\"\n          value={email}\n          onChange={(event) => setEmail(event.target.value)}\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          required\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          value={body}\n          onChange={(event) => setBody(event.target.value)}\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          required\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getPostDetails } from '../../api/posts';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\nimport { getPostComments } from '../../api/comments';\nimport { remove, add } from '../../api/api';\nimport { Post } from '../types/Post';\nimport { Comment } from '../types/Comment';\n\ntype Props = {\n  selectedId: number,\n};\n\nexport const PostDetails: React.FC<Props> = ({ selectedId }) => {\n  const [details, setDetails] = useState<Post | null>(null);\n  const [comments, setComments] = useState<Comment[] | []>([]);\n  const [commentsIsvisible, setCommentsIsvisible] = useState(true);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const deleteComment = (postId: number) => {\n    remove(`/comments/${postId}`);\n    setComments(comments.filter(el => el.id !== postId));\n  };\n\n  const addComment = (name:string, email:string, body:string) => {\n    const option = {\n      id: comments.length + 1,\n      postId: selectedId,\n      name,\n      email,\n      body,\n    };\n\n    add('/comments', option);\n    setComments([...comments, option]);\n  };\n\n  useEffect(() => {\n    getPostDetails(selectedId)\n      .then(data => {\n        setDetails(data);\n        setErrorMessage('');\n      })\n      .catch(() => {\n        setErrorMessage('Ooops, something went wrong');\n      });\n  }, [selectedId]);\n\n  useEffect(() => {\n    getPostComments(selectedId)\n      .then(data => {\n        setComments(data);\n        setErrorMessage('');\n      })\n      .catch(() => {\n        setErrorMessage('Ooops, something went wrong');\n      });\n  }, [selectedId]);\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n      {errorMessage}\n      {details && (\n        <section className=\"PostDetails__post\">\n          <p>{details.body}</p>\n        </section>\n      )}\n\n      <section className=\"PostDetails__comments\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => setCommentsIsvisible(!commentsIsvisible)}\n        >\n          {commentsIsvisible\n            ? ('Hide') : ('Show')}\n          {` ${comments.length} comments`}\n        </button>\n\n        {commentsIsvisible && (\n          <ul className=\"PostDetails__list\">\n            {comments.map(el => (\n              <li className=\"PostDetails__list-item\" key={el.id}>\n                <button\n                  type=\"button\"\n                  className=\"PostDetails__remove-button button\"\n                  onClick={() => deleteComment(el.id)}\n                >\n                  X\n                </button>\n                <p>{el.name}</p>\n                <p>{el.body}</p>\n              </li>\n            ))}\n          </ul>\n        )}\n      </section>\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm addComment={addComment} />\n        </div>\n      </section>\n    </div>\n  );\n};\n","import { BASE_URL } from './api';\n\ntype Post = {\n  id: number,\n  userId: number,\n  title: string,\n  body: string,\n  createdAt: string,\n  updatedAt: string,\n};\n\nexport const getUserPosts = (userId: number) => {\n  if (userId === 0) {\n    return fetch(`${BASE_URL}/posts?`)\n      .then(response => {\n        return response.ok\n          ? response.json()\n          : Promise.reject(new Error('Some error happens'));\n      });\n  }\n\n  return fetch(`${BASE_URL}/posts?userId=${userId}`)\n    .then(response => {\n      return response.ok\n        ? response.json()\n        : Promise.reject(new Error('Some error happens'));\n    });\n};\n\nexport const getPostDetails = (postId:number): Promise<Post> => {\n  return fetch(`${BASE_URL}/posts/${postId}`)\n    .then(response => {\n      return response.ok\n        ? response.json()\n        : Promise.reject(new Error('Some error happens'));\n    });\n};\n","import { BASE_URL } from './api';\n\ntype Comment = {\n  id: number,\n  postId: number,\n  name: string,\n  email: string,\n  body: string,\n  createdAt: string,\n  updatedAt: string,\n};\n\nexport const getPostComments = (postId:number) => {\n  return fetch(`${BASE_URL}/comments/`)\n    .then(response => {\n      return response.ok\n        ? response.json()\n        : Promise.reject(new Error('Some error happens'));\n    })\n    .then(comments => comments.filter((comment:Comment) => comment.postId === postId));\n};\n","/* eslint-disable no-console */\nimport React, { useEffect, useState } from 'react';\nimport classnames from 'classnames';\nimport './PostsList.scss';\nimport { getUserPosts } from '../../api/posts';\nimport { PostDetails } from '../PostDetails';\nimport { Post } from '../types/Post';\n\ntype Props = {\n  userId: number,\n};\n\nexport const PostsList: React.FC<Props> = ({ userId }) => {\n  const [posts, setPosts] = useState<Post[] | null>(null);\n  const [selectedPostId, setSelectedPost] = useState(0);\n  const [postDetails, setPostDetails] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  useEffect(() => {\n    getUserPosts(userId)\n      .then(userPosts => {\n        setPosts(userPosts);\n        setErrorMessage('');\n      })\n      .catch(() => {\n        setErrorMessage('Ooops, something went wrong');\n      });\n  }, [userId]);\n\n  const openDetails = (id:number) => {\n    setSelectedPost(id);\n    setPostDetails(true);\n  };\n\n  const closeDetails = () => {\n    setSelectedPost(0);\n    setPostDetails(false);\n  };\n\n  const toggleDetails = (post:Post) => {\n    if (post.id === selectedPostId) {\n      closeDetails();\n    } else {\n      setSelectedPost(post.id);\n    }\n  };\n\n  return (\n    <div className=\"main\">\n      <div className=\"PostsList\">\n        <h2>Posts:</h2>\n        {errorMessage}\n        {posts && (\n          <ul className=\"PostsList__list\">\n            {posts.map(post => (\n              <li\n                className=\"PostsList__item\"\n                key={post.id}\n              >\n                <div>\n                  <b>\n                    {`User: ${post.userId}:`}\n                  </b>\n                  {post.title}\n                </div>\n\n                {!postDetails && (\n                  <button\n                    type=\"button\"\n                    className={classnames('PostsList__button button')}\n                    onClick={() => openDetails(post.id)}\n                  >\n                    Open\n                  </button>\n                )}\n\n                {postDetails && (\n                  <button\n                    type=\"button\"\n                    className={classnames('PostsList__button button')}\n                    onClick={() => toggleDetails(post)}\n                  >\n                    {post.id === selectedPostId ? ('Close') : ('Open')}\n                  </button>\n                )}\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n\n      {postDetails && (\n        <div className=\"PostsList__side\">\n          <PostDetails selectedId={selectedPostId} />\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable no-console */\nimport React, { useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\n\nconst App: React.FC = () => {\n  const [selectedUser, setSelectedUser] = useState(0);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label htmlFor=\"list\">\n          Select a user: &nbsp;\n          <select\n            className=\"App__user-selector\"\n            id=\"list\"\n            value={selectedUser}\n            onChange={(event) => {\n              setSelectedUser(Number(event.target.value));\n            }}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList userId={selectedUser} />\n        </div>\n\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}